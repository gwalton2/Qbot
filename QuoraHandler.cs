using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Diagnostics;
using System.IO;
using System.Web.Script.Serialization;

namespace QBot
{
    class QuoraHandler
    {
        static public Dictionary<string, Process> initiated_users = new Dictionary<string, Process>();
        static public void StartScript(string username, string password, string ques_file, string ques_num)
        {
            string filename = "quora.py";
            string python_path = "C:\\Users\\walto\\Anaconda\\python.exe";

            Process start = new Process();
            start.StartInfo.FileName = python_path;
            start.StartInfo.Arguments = string.Format("{0} {1} {2} {3} {4}", filename, username, password, ques_file, ques_num);
            start.StartInfo.UseShellExecute = false;// Do not use OS shell
            start.StartInfo.CreateNoWindow = true; // We don't need new window
            start.StartInfo.RedirectStandardOutput = false;// We don't want to see any output generated by application
            start.StartInfo.RedirectStandardError = false; // We don't want to see any error in standard output (for example exceptions)
            start.Start();

            initiated_users.Add(username, start);
        }

        static public void RemoveJson()
        {
            foreach (string key in initiated_users.Keys)
            {
                File.Delete(key + ".json");
            }
        }

        static public bool ScriptsRunning()
        {
            foreach (string key in initiated_users.Keys)
            {
                if (!initiated_users[key].HasExited)
                {
                    return true;
                }
            }
            return false;
        }

        static public Dictionary<string,int> GetJson(string username)
        {
            Dictionary<string, int> json_data;
            try
            {
                using (StreamReader sr = new StreamReader(username + ".json"))
                {
                    string raw_data = sr.ReadToEnd();
                    json_data = new JavaScriptSerializer().Deserialize<Dictionary<string, int>>(raw_data);
                }
                return json_data;
            }
            catch
            {
                return null;
            }
            
        }
    }
}
